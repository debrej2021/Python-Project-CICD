name: CI/CD Workflow

on:
  push:
    branches:
      - main
      - staging
  release:
    types: [published]  # This triggers the workflow on new releases

jobs:
  install_dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify the version of Python

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Ensure pytest is included
          pip freeze  # List all installed packages for debugging

  run_tests:
    runs-on: ubuntu-latest
    needs: install_dependencies  # This job depends on the previous job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Run tests
        run: |
          echo "Running tests..."
          pytest simple_python.py  # Change this path to your test directory

  build:
    runs-on: ubuntu-latest
    needs: run_tests  # This job depends on the run_tests job
    if: success()  # This job will only run if the previous job succeeded

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build the application
        run: |
          echo "Building the application..."  # Add your actual build commands here

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the build job
    if: github.ref == 'refs/heads/staging'  # This job runs only for pushes to the staging branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Staging
        run: |
          echo "Deploying to staging..."  # Add your deployment commands here

  deploy_production:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the build job
    if: startsWith(github.ref, 'refs/tags/')  # This job runs only for tagged releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Production
        run: |
          echo "Deploying to production..."  # Add your deployment commands here
